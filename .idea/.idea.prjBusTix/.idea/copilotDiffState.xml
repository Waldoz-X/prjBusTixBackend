<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/FRONTEND_COLORES_GUIA.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/FRONTEND_COLORES_GUIA.md" />
              <option name="updatedContent" value="#  Guía de Colores para Frontend - BusTix&#10;&#10;## Mapeo de Estatus a Colores (TypeScript/Angular)&#10;&#10;Crea este archivo en tu frontend:&#10;&#10;### `src/app/constants/status-colors.ts`&#10;&#10;```typescript&#10;export const STATUS_COLORS = {&#10;  // Usuario&#10;  'USR_ACTIVO': '#28a745',      // Verde&#10;  'USR_INACTIVO': '#6c757d',    // Gris&#10;  'USR_BLOQUEADO': '#dc3545',   // Rojo&#10;  &#10;  // Viaje&#10;  'VJE_BORRADOR': '#6c757d',    // Gris&#10;  'VJE_PROGRAMADO': '#17a2b8',  // Cyan&#10;  'VJE_EN_CURSO': '#ffc107',    // Amarillo&#10;  'VJE_FINALIZADO': '#28a745',  // Verde&#10;  'VJE_CANCELADO': '#dc3545',   // Rojo&#10;  &#10;  // Boleto&#10;  'BOL_PENDIENTE': '#ffc107',   // Amarillo&#10;  'BOL_PAGADO': '#28a745',      // Verde&#10;  'BOL_VALIDADO': '#17a2b8',    // Cyan&#10;  'BOL_USADO': '#007bff',       // Azul&#10;  'BOL_CANCELADO': '#dc3545',   // Rojo&#10;  &#10;  // Pago&#10;  'PAG_PENDIENTE': '#ffc107',   // Amarillo&#10;  'PAG_CAPTURADO': '#28a745',   // Verde&#10;  'PAG_RECHAZADO': '#dc3545',   // Rojo&#10;  &#10;  // Incidencia&#10;  'INC_ABIERTA': '#dc3545',     // Rojo&#10;  'INC_EN_PROCESO': '#17a2b8',  // Cyan&#10;  'INC_RESUELTA': '#28a745',    // Verde&#10;  'INC_CERRADA': '#007bff',     // Azul&#10;  &#10;  // Validación/Abordaje&#10;  'ABD_PENDIENTE': '#ffc107',   // Amarillo&#10;  'ABD_ABORDADO': '#28a745',    // Verde&#10;  'ABD_NO_PRESENTO': '#dc3545', // Rojo&#10;  &#10;  // Unidad&#10;  'UNI_DISPONIBLE': '#28a745',     // Verde&#10;  'UNI_EN_SERVICIO': '#17a2b8',    // Cyan&#10;  'UNI_MANTENIMIENTO': '#ffc107',  // Amarillo&#10;  &#10;  // Evento&#10;  'EVT_PROGRAMADO': '#17a2b8',  // Cyan&#10;  'EVT_EN_CURSO': '#ffc107',    // Amarillo&#10;  'EVT_FINALIZADO': '#28a745',  // Verde&#10;  'EVT_CANCELADO': '#dc3545'    // Rojo&#10;};&#10;&#10;// Clases de Bootstrap correspondientes&#10;export const STATUS_BADGE_CLASSES = {&#10;  // Usuario&#10;  'USR_ACTIVO': 'badge-success',&#10;  'USR_INACTIVO': 'badge-secondary',&#10;  'USR_BLOQUEADO': 'badge-danger',&#10;  &#10;  // Viaje&#10;  'VJE_BORRADOR': 'badge-secondary',&#10;  'VJE_PROGRAMADO': 'badge-info',&#10;  'VJE_EN_CURSO': 'badge-warning',&#10;  'VJE_FINALIZADO': 'badge-success',&#10;  'VJE_CANCELADO': 'badge-danger',&#10;  &#10;  // Boleto&#10;  'BOL_PENDIENTE': 'badge-warning',&#10;  'BOL_PAGADO': 'badge-success',&#10;  'BOL_VALIDADO': 'badge-info',&#10;  'BOL_USADO': 'badge-primary',&#10;  'BOL_CANCELADO': 'badge-danger',&#10;  &#10;  // Pago&#10;  'PAG_PENDIENTE': 'badge-warning',&#10;  'PAG_CAPTURADO': 'badge-success',&#10;  'PAG_RECHAZADO': 'badge-danger',&#10;  &#10;  // Incidencia&#10;  'INC_ABIERTA': 'badge-danger',&#10;  'INC_EN_PROCESO': 'badge-info',&#10;  'INC_RESUELTA': 'badge-success',&#10;  'INC_CERRADA': 'badge-primary',&#10;  &#10;  // Validación/Abordaje&#10;  'ABD_PENDIENTE': 'badge-warning',&#10;  'ABD_ABORDADO': 'badge-success',&#10;  'ABD_NO_PRESENTO': 'badge-danger',&#10;  &#10;  // Unidad&#10;  'UNI_DISPONIBLE': 'badge-success',&#10;  'UNI_EN_SERVICIO': 'badge-info',&#10;  'UNI_MANTENIMIENTO': 'badge-warning',&#10;  &#10;  // Evento&#10;  'EVT_PROGRAMADO': 'badge-info',&#10;  'EVT_EN_CURSO': 'badge-warning',&#10;  'EVT_FINALIZADO': 'badge-success',&#10;  'EVT_CANCELADO': 'badge-danger'&#10;};&#10;&#10;// Iconos Font Awesome&#10;export const STATUS_ICONS = {&#10;  // Usuario&#10;  'USR_ACTIVO': 'fa-check-circle',&#10;  'USR_INACTIVO': 'fa-pause-circle',&#10;  'USR_BLOQUEADO': 'fa-ban',&#10;  &#10;  // Viaje&#10;  'VJE_BORRADOR': 'fa-file-alt',&#10;  'VJE_PROGRAMADO': 'fa-calendar-check',&#10;  'VJE_EN_CURSO': 'fa-bus',&#10;  'VJE_FINALIZADO': 'fa-flag-checkered',&#10;  'VJE_CANCELADO': 'fa-times-circle',&#10;  &#10;  // Boleto&#10;  'BOL_PENDIENTE': 'fa-clock',&#10;  'BOL_PAGADO': 'fa-money-bill-wave',&#10;  'BOL_VALIDADO': 'fa-check-double',&#10;  'BOL_USADO': 'fa-ticket-alt',&#10;  'BOL_CANCELADO': 'fa-trash',&#10;  &#10;  // Pago&#10;  'PAG_PENDIENTE': 'fa-hourglass-half',&#10;  'PAG_CAPTURADO': 'fa-check',&#10;  'PAG_RECHAZADO': 'fa-exclamation-triangle',&#10;  &#10;  // Incidencia&#10;  'INC_ABIERTA': 'fa-exclamation-circle',&#10;  'INC_EN_PROCESO': 'fa-spinner',&#10;  'INC_RESUELTA': 'fa-check-circle',&#10;  'INC_CERRADA': 'fa-archive',&#10;  &#10;  // Validación/Abordaje&#10;  'ABD_PENDIENTE': 'fa-user-clock',&#10;  'ABD_ABORDADO': 'fa-user-check',&#10;  'ABD_NO_PRESENTO': 'fa-user-times',&#10;  &#10;  // Unidad&#10;  'UNI_DISPONIBLE': 'fa-check',&#10;  'UNI_EN_SERVICIO': 'fa-bus-alt',&#10;  'UNI_MANTENIMIENTO': 'fa-wrench',&#10;  &#10;  // Evento&#10;  'EVT_PROGRAMADO': 'fa-calendar',&#10;  'EVT_EN_CURSO': 'fa-calendar-day',&#10;  'EVT_FINALIZADO': 'fa-calendar-check',&#10;  'EVT_CANCELADO': 'fa-calendar-times'&#10;};&#10;```&#10;&#10;---&#10;&#10;## Uso en Componentes Angular&#10;&#10;### 1. Crear Pipe para Colores&#10;&#10;```typescript&#10;// src/app/pipes/status-color.pipe.ts&#10;import { Pipe, PipeTransform } from '@angular/core';&#10;import { STATUS_COLORS } from '../constants/status-colors';&#10;&#10;@Pipe({&#10;  name: 'statusColor'&#10;})&#10;export class StatusColorPipe implements PipeTransform {&#10;  transform(codigo: string): string {&#10;    return STATUS_COLORS[codigo] || '#6c757d'; // Gris por defecto&#10;  }&#10;}&#10;```&#10;&#10;### 2. Crear Pipe para Clases de Badge&#10;&#10;```typescript&#10;// src/app/pipes/status-badge.pipe.ts&#10;import { Pipe, PipeTransform } from '@angular/core';&#10;import { STATUS_BADGE_CLASSES } from '../constants/status-colors';&#10;&#10;@Pipe({&#10;  name: 'statusBadge'&#10;})&#10;export class StatusBadgePipe implements PipeTransform {&#10;  transform(codigo: string): string {&#10;    return STATUS_BADGE_CLASSES[codigo] || 'badge-secondary';&#10;  }&#10;}&#10;```&#10;&#10;### 3. Crear Pipe para Iconos&#10;&#10;```typescript&#10;// src/app/pipes/status-icon.pipe.ts&#10;import { Pipe, PipeTransform } from '@angular/core';&#10;import { STATUS_ICONS } from '../constants/status-colors';&#10;&#10;@Pipe({&#10;  name: 'statusIcon'&#10;})&#10;export class StatusIconPipe implements PipeTransform {&#10;  transform(codigo: string): string {&#10;    return STATUS_ICONS[codigo] || 'fa-circle';&#10;  }&#10;}&#10;```&#10;&#10;---&#10;&#10;## Ejemplos de Uso en Templates&#10;&#10;### Ejemplo 1: Badge con Color&#10;&#10;```html&#10;&lt;span class=&quot;badge&quot; &#10;      [ngClass]=&quot;estatus.codigo | statusBadge&quot;&#10;      [style.background-color]=&quot;estatus.codigo | statusColor&quot;&gt;&#10;  {{ estatus.nombre }}&#10;&lt;/span&gt;&#10;```&#10;&#10;### Ejemplo 2: Badge con Icono&#10;&#10;```html&#10;&lt;span class=&quot;badge badge-pill&quot; [ngClass]=&quot;viaje.estatusCodigo | statusBadge&quot;&gt;&#10;  &lt;i class=&quot;fas&quot; [ngClass]=&quot;viaje.estatusCodigo | statusIcon&quot;&gt;&lt;/i&gt;&#10;  {{ viaje.estatusNombre }}&#10;&lt;/span&gt;&#10;```&#10;&#10;### Ejemplo 3: Indicador de Estado con Punto&#10;&#10;```html&#10;&lt;div class=&quot;status-indicator&quot;&gt;&#10;  &lt;span class=&quot;status-dot&quot; &#10;        [style.background-color]=&quot;user.estatusCodigo | statusColor&quot;&gt;&#10;  &lt;/span&gt;&#10;  {{ user.estatusNombre }}&#10;&lt;/div&gt;&#10;```&#10;&#10;### Ejemplo 4: Lista de Estados&#10;&#10;```html&#10;&lt;ul class=&quot;list-group&quot;&gt;&#10;  &lt;li *ngFor=&quot;let viaje of viajes&quot; class=&quot;list-group-item&quot;&gt;&#10;    &lt;div class=&quot;d-flex justify-content-between align-items-center&quot;&gt;&#10;      &lt;div&gt;&#10;        &lt;h5&gt;{{ viaje.codigoViaje }}&lt;/h5&gt;&#10;        &lt;small&gt;{{ viaje.destino }}&lt;/small&gt;&#10;      &lt;/div&gt;&#10;      &lt;span class=&quot;badge badge-lg&quot; [ngClass]=&quot;viaje.estatusCodigo | statusBadge&quot;&gt;&#10;        &lt;i class=&quot;fas&quot; [ngClass]=&quot;viaje.estatusCodigo | statusIcon&quot;&gt;&lt;/i&gt;&#10;        {{ viaje.estatusNombre }}&#10;      &lt;/span&gt;&#10;    &lt;/div&gt;&#10;  &lt;/li&gt;&#10;&lt;/ul&gt;&#10;```&#10;&#10;---&#10;&#10;## CSS Personalizado (Opcional)&#10;&#10;```scss&#10;// src/styles.scss&#10;&#10;.status-dot {&#10;  display: inline-block;&#10;  width: 10px;&#10;  height: 10px;&#10;  border-radius: 50%;&#10;  margin-right: 8px;&#10;}&#10;&#10;.status-indicator {&#10;  display: flex;&#10;  align-items: center;&#10;  font-size: 14px;&#10;}&#10;&#10;.badge {&#10;  padding: 6px 12px;&#10;  font-size: 12px;&#10;  font-weight: 600;&#10;  text-transform: uppercase;&#10;  letter-spacing: 0.5px;&#10;  &#10;  i {&#10;    margin-right: 4px;&#10;  }&#10;}&#10;&#10;.badge-lg {&#10;  padding: 8px 16px;&#10;  font-size: 14px;&#10;}&#10;&#10;// Soporte para Dark Mode&#10;@media (prefers-color-scheme: dark) {&#10;  .badge-secondary {&#10;    background-color: #495057 !important;&#10;    color: #fff !important;&#10;  }&#10;  &#10;  .badge-light {&#10;    background-color: #495057 !important;&#10;    color: #fff !important;&#10;  }&#10;}&#10;```&#10;&#10;---&#10;&#10;## Ventajas de Este Enfoque&#10;&#10;✅ **Mantenibilidad**: Cambiar colores en un solo lugar  &#10;✅ **Consistencia**: Mismo aspecto en toda la aplicación  &#10;✅ **Temas**: Fácil implementación de dark mode  &#10;✅ **Performance**: No consultas adicionales a BD  &#10;✅ **Flexibilidad**: Cambios sin tocar backend  &#10;✅ **Escalabilidad**: Fácil agregar nuevos estados  &#10;&#10;---&#10;&#10;## Interfaz TypeScript para Estatus&#10;&#10;```typescript&#10;// src/app/models/estatus.interface.ts&#10;export interface Estatus {&#10;  id_Estatus: number;&#10;  codigo: string;&#10;  nombre: string;&#10;  descripcion?: string;&#10;  categoria?: string;&#10;  orden: number;&#10;  esActivo: boolean;&#10;}&#10;&#10;// Helper para obtener color&#10;export class EstatusHelper {&#10;  static getColor(codigo: string): string {&#10;    return STATUS_COLORS[codigo] || '#6c757d';&#10;  }&#10;  &#10;  static getBadgeClass(codigo: string): string {&#10;    return STATUS_BADGE_CLASSES[codigo] || 'badge-secondary';&#10;  }&#10;  &#10;  static getIcon(codigo: string): string {&#10;    return STATUS_ICONS[codigo] || 'fa-circle';&#10;  }&#10;}&#10;```&#10;&#10;---&#10;&#10;**Nota**: Este enfoque sigue las mejores prácticas de desarrollo frontend y garantiza una separación limpia entre la capa de datos y la capa de presentación.&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>